{
  "version": 3,
  "sources": ["src/printeer.ts", "src/index.ts"],
  "sourcesContent": ["import puppeteer from 'puppeteer';\r\nimport { normalize } from 'path';\r\n\r\n\r\n// networkidle0 - consider navigation to be finished when there are no more than 0 network connections for at least 500 ms\r\n// networkidle2 - consider navigation to be finished when there are no more than 2 network connections for at least 500 ms.\r\n\r\n\r\n/**\r\n * Generate the report.\r\n * @param {string} reportName The name of the report.\r\n * @returns The promise of the report file.\r\n */\r\nexport default async (url:string, outputFile:string, outputType:string|null=null) => {\r\n\r\n  getPackageJson();\r\n\r\n  return new Promise(async (resolve, reject) => {\r\n    outputFile        = normalize(outputFile);\r\n    if (!url.startsWith('http')) {\r\n      reject('URL must start with http or https');\r\n    }\r\n\r\n    const launchOptions:any = {\r\n      headless: true,\r\n      args: ['--no-sandbox', '--disable-setuid-sandbox'] // <- Handle this better, only for root users!\r\n    }\r\n\r\n    // PUPPETEER_EXECUTABLE_PATH\r\n    // Read the environment variable PUPPETEER_EXECUTABLE_PATH and use it as the path to the executable.\r\n    // If the environment variable is not set, the default executable path is used.\r\n    const exePath = process.env.PUPPETEER_EXECUTABLE_PATH;\r\n    if (exePath) {\r\n      launchOptions.executablePath = exePath;\r\n    }\r\n\r\n    console.log(\"Launch Options:\", launchOptions)\r\n\r\n    let res:any = null\r\n    let page:any = null\r\n    let browser:any = null\r\n\r\n    try {\r\n      browser = await puppeteer.launch(launchOptions);\r\n      page    = await browser.newPage();\r\n      res     = await page.goto(url, {waitUntil: 'networkidle0'});\r\n    } catch (err) {\r\n      console.error(\"Browser Launch Error:\", err)\r\n      console.error(\"Browser Launch Options:\", launchOptions)\r\n\r\n      return reject(err);\r\n    }\r\n\r\n    if (!res) {\r\n      return reject(new Error(\"Could not load the page.\"));\r\n    }\r\n\r\n    // Detect outputType\r\n\r\n    outputType = detectOutputType(outputFile, outputType);\r\n\r\n    if (res.status() !== 200) {\r\n      reject(`Error: ${res.status()}: ${res.statusText()}`);\r\n    } else {\r\n      if (outputType === 'png') {\r\n        await page.screenshot({ path: outputFile });\r\n      } else {\r\n        await page.pdf({ format: 'A4', path: outputFile });\r\n      }\r\n\r\n      // convert outputFile to absolute path\r\n      outputFile = normalize(outputFile);\r\n\r\n      resolve(outputFile);\r\n    }\r\n    return await browser.close();\r\n  })\r\n}\r\n\r\nfunction getPackageJson() {\r\n  // Print process exec path\r\n  console.log(\"Process exec path\", process.execPath)\r\n\r\n}\r\n\r\n\r\nfunction detectOutputType(fname:string, outputType:string|null) {\r\n  const validOutputTypes:string[] = ['pdf', 'png']\r\n\r\n  if (!outputType) {\r\n    const ext = fname.split('.').pop()\r\n    if (!ext) { return 'pdf' }\r\n    if (validOutputTypes.includes(ext)) { return ext }\r\n    return 'pdf'\r\n  }\r\n\r\n  if (!validOutputTypes.includes(outputType)) { return 'pdf' }\r\n  return outputType\r\n}", "import printeer from \"./printeer\";\r\n\r\nexport default printeer;\r\n"],
  "mappings": ";AAAA,OAAO,eAAe;AACtB,SAAS,iBAAiB;AAY1B,IAAO,mBAAQ,OAAO,KAAY,YAAmB,aAAuB,SAAS;AAEnF,iBAAe;AAEf,SAAO,IAAI,QAAQ,OAAO,SAAS,WAAW;AAC5C,iBAAoB,UAAU,UAAU;AACxC,QAAI,CAAC,IAAI,WAAW,MAAM,GAAG;AAC3B,aAAO,mCAAmC;AAAA,IAC5C;AAEA,UAAM,gBAAoB;AAAA,MACxB,UAAU;AAAA,MACV,MAAM,CAAC,gBAAgB,0BAA0B;AAAA,IACnD;AAKA,UAAM,UAAU,QAAQ,IAAI;AAC5B,QAAI,SAAS;AACX,oBAAc,iBAAiB;AAAA,IACjC;AAEA,YAAQ,IAAI,mBAAmB,aAAa;AAE5C,QAAI,MAAU;AACd,QAAI,OAAW;AACf,QAAI,UAAc;AAElB,QAAI;AACF,gBAAU,MAAM,UAAU,OAAO,aAAa;AAC9C,aAAU,MAAM,QAAQ,QAAQ;AAChC,YAAU,MAAM,KAAK,KAAK,KAAK,EAAC,WAAW,eAAc,CAAC;AAAA,IAC5D,SAAS,KAAP;AACA,cAAQ,MAAM,yBAAyB,GAAG;AAC1C,cAAQ,MAAM,2BAA2B,aAAa;AAEtD,aAAO,OAAO,GAAG;AAAA,IACnB;AAEA,QAAI,CAAC,KAAK;AACR,aAAO,OAAO,IAAI,MAAM,0BAA0B,CAAC;AAAA,IACrD;AAIA,iBAAa,iBAAiB,YAAY,UAAU;AAEpD,QAAI,IAAI,OAAO,MAAM,KAAK;AACxB,aAAO,UAAU,IAAI,OAAO,MAAM,IAAI,WAAW,GAAG;AAAA,IACtD,OAAO;AACL,UAAI,eAAe,OAAO;AACxB,cAAM,KAAK,WAAW,EAAE,MAAM,WAAW,CAAC;AAAA,MAC5C,OAAO;AACL,cAAM,KAAK,IAAI,EAAE,QAAQ,MAAM,MAAM,WAAW,CAAC;AAAA,MACnD;AAGA,mBAAa,UAAU,UAAU;AAEjC,cAAQ,UAAU;AAAA,IACpB;AACA,WAAO,MAAM,QAAQ,MAAM;AAAA,EAC7B,CAAC;AACH;AAEA,SAAS,iBAAiB;AAExB,UAAQ,IAAI,qBAAqB,QAAQ,QAAQ;AAEnD;AAGA,SAAS,iBAAiB,OAAc,YAAwB;AAC9D,QAAM,mBAA4B,CAAC,OAAO,KAAK;AAE/C,MAAI,CAAC,YAAY;AACf,UAAM,MAAM,MAAM,MAAM,GAAG,EAAE,IAAI;AACjC,QAAI,CAAC,KAAK;AAAE,aAAO;AAAA,IAAM;AACzB,QAAI,iBAAiB,SAAS,GAAG,GAAG;AAAE,aAAO;AAAA,IAAI;AACjD,WAAO;AAAA,EACT;AAEA,MAAI,CAAC,iBAAiB,SAAS,UAAU,GAAG;AAAE,WAAO;AAAA,EAAM;AAC3D,SAAO;AACT;;;AChGA,IAAO,cAAQ;",
  "names": []
}
