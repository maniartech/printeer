<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            max-width: 800px;
            margin: 0 auto;
            padding: 2rem;
            color: #333;
        }
        
        h1 {
            color: #2c3e50;
            border-bottom: 3px solid #f39c12;
            padding-bottom: 0.5rem;
        }
        
        .loading {
            background: #fff3cd;
            border: 1px solid #ffc107;
            padding: 1rem;
            border-radius: 8px;
            margin: 1rem 0;
            text-align: center;
        }
        
        .spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #ffc107;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 0.5rem;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .delayed-content {
            display: none;
            background: #d4edda;
            border: 1px solid #c3e6cb;
            padding: 2rem;
            border-radius: 8px;
            margin: 2rem 0;
        }
        
        .delayed-content.visible {
            display: block;
        }
        
        .test-instructions {
            background: #e7f3ff;
            padding: 1.5rem;
            border-radius: 8px;
            border-left: 4px solid #007bff;
            margin: 2rem 0;
        }
        
        .status-indicator {
            padding: 0.5rem 1rem;
            border-radius: 4px;
            font-weight: bold;
            margin: 0.5rem 0;
        }
        
        .status-waiting {
            background: #fff3cd;
            color: #856404;
        }
        
        .status-ready {
            background: #d4edda;
            color: #155724;
        }
    </style>
</head>
<body>
    <header>
        <h1><%= title %></h1>
        <p><strong>Purpose:</strong> Test wait-for-selector functionality with delayed content appearance</p>
    </header>

    <main>
        <section class="test-instructions">
            <h2>Testing Instructions</h2>
            <p><strong>CLI Command:</strong> <code>--wait-for-selector "#ready"</code></p>
            <p><strong>Expected Behavior:</strong> Conversion should wait until the "Content Ready" section appears</p>
            <p><strong>Delay:</strong> <%= delay %>ms</p>
        </section>

        <section class="loading" id="loading">
            <div class="spinner"></div>
            <span>Loading content... (waiting <%= delay %>ms)</span>
        </section>

        <div class="status-indicator status-waiting" id="status">
            Status: Waiting for content to load
        </div>

        <section class="delayed-content" id="ready">
            <h2>✅ Content Ready!</h2>
            <p>This content appeared after a <%= delay %>ms delay. If you're seeing this in the converted output, the wait-for-selector functionality worked correctly.</p>
            
            <div class="status-indicator status-ready">
                Status: Content loaded successfully
            </div>
            
            <h3>Additional Content</h3>
            <p>This section contains important information that should only appear in the final output if the conversion tool properly waited for the selector.</p>
            
            <ul>
                <li>Dynamic content loading: ✅ Success</li>
                <li>Wait strategy: wait-for-selector</li>
                <li>Target selector: #ready</li>
                <li>Delay duration: <%= delay %>ms</li>
            </ul>
            
            <table style="width: 100%; border-collapse: collapse; margin: 1rem 0;">
                <thead>
                    <tr style="background: #f8f9fa;">
                        <th style="border: 1px solid #ddd; padding: 0.75rem; text-align: left;">Test Scenario</th>
                        <th style="border: 1px solid #ddd; padding: 0.75rem; text-align: left;">Expected Result</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td style="border: 1px solid #ddd; padding: 0.75rem;">With --wait-for-selector "#ready"</td>
                        <td style="border: 1px solid #ddd; padding: 0.75rem;">This table should be visible in output</td>
                    </tr>
                    <tr>
                        <td style="border: 1px solid #ddd; padding: 0.75rem;">Without wait strategy</td>
                        <td style="border: 1px solid #ddd; padding: 0.75rem;">Only loading spinner visible</td>
                    </tr>
                    <tr>
                        <td style="border: 1px solid #ddd; padding: 0.75rem;">With --wait-until domcontentloaded</td>
                        <td style="border: 1px solid #ddd; padding: 0.75rem;">May miss delayed content</td>
                    </tr>
                </tbody>
            </table>
        </section>
    </main>

    <footer style="margin-top: 3rem; padding-top: 2rem; border-top: 1px solid #eee; color: #666; font-size: 0.9rem;">
        <p><strong>Wait Strategy Test:</strong> Use --wait-for-selector "#ready" to ensure delayed content is captured</p>
    </footer>

    <script>
        // Simulate delayed content loading
        setTimeout(function() {
            // Hide loading indicator
            document.getElementById('loading').style.display = 'none';
            
            // Update status
            const status = document.getElementById('status');
            status.textContent = 'Status: Content loaded successfully';
            status.className = 'status-indicator status-ready';
            
            // Show delayed content
            document.getElementById('ready').classList.add('visible');
            
            console.log('Delayed content is now visible');
        }, <%= delay %>);
    </script>
</body>
</html>