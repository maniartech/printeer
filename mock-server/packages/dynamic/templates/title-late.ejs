<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f8f9fa;
        }
        .test-container {
            background: white;
            border-radius: 8px;
            padding: 30px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border: 1px solid #dee2e6;
        }
        .title-display {
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            padding: 15px;
            margin: 15px 0;
            font-family: monospace;
        }
        .countdown {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 4px;
            padding: 15px;
            margin: 15px 0;
            text-align: center;
            font-size: 18px;
            font-weight: bold;
            color: #856404;
        }
        .status-indicator {
            padding: 10px;
            border-radius: 4px;
            margin: 10px 0;
            font-weight: bold;
        }
        .status-waiting {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            color: #856404;
        }
        .status-complete {
            background: #d4edda;
            border: 1px solid #c3e6cb;
            color: #155724;
        }
        .filename-info {
            background: #e7f3ff;
            border: 1px solid #b3d9ff;
            border-radius: 4px;
            padding: 15px;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="test-container">
        <h1>Title Change Testing</h1>
        <p>This page demonstrates dynamic title changes for testing filename generation from page titles.</p>
        
        <div class="title-display">
            <strong>Current Page Title:</strong> <span id="current-title"><%= title %></span>
        </div>
        
        <div id="status" class="status-indicator status-waiting">
            ⏳ Title will change in <span id="countdown"><%= delay %></span>ms
        </div>
        
        <div class="countdown" id="countdown-display">
            <span id="countdown-seconds"><%= Math.ceil(delay / 1000) %></span> seconds remaining
        </div>
        
        <div class="filename-info">
            <h4>Testing Filename Generation</h4>
            <p><strong>Initial Title:</strong> "<%= title %>"</p>
            <p><strong>Final Title:</strong> "<%= finalTitle %>"</p>
            <p><strong>Delay:</strong> <%= delay %>ms</p>
            
            <h5>CLI Testing:</h5>
            <ul>
                <li>Use <code>--title-fallback</code> to generate filenames from page titles</li>
                <li>The CLI should wait for the title to change and use the final title</li>
                <li>Expected filename: "<%= finalTitle.replace(/[^a-zA-Z0-9]/g, '_') %>.pdf"</li>
            </ul>
        </div>
        
        <div style="margin-top: 20px; padding: 15px; background: #f8f9fa; border-radius: 4px;">
            <h4>How This Test Works</h4>
            <ol>
                <li>Page loads with initial title: "<%= title %>"</li>
                <li>After <%= delay %>ms delay, title changes to: "<%= finalTitle %>"</li>
                <li>CLI should detect the final title for filename generation</li>
                <li>Use appropriate wait conditions to ensure title change is captured</li>
            </ol>
        </div>
    </div>

    <script>
        const delay = <%= delay %>;
        const finalTitle = '<%= finalTitle %>';
        const countdownElement = document.getElementById('countdown');
        const countdownSecondsElement = document.getElementById('countdown-seconds');
        const currentTitleElement = document.getElementById('current-title');
        const statusElement = document.getElementById('status');
        const countdownDisplay = document.getElementById('countdown-display');
        
        let remainingTime = delay;
        
        // Update countdown every 100ms
        const countdownInterval = setInterval(() => {
            remainingTime -= 100;
            
            if (remainingTime <= 0) {
                clearInterval(countdownInterval);
                changeTitle();
                return;
            }
            
            countdownElement.textContent = remainingTime;
            countdownSecondsElement.textContent = Math.ceil(remainingTime / 1000);
        }, 100);
        
        function changeTitle() {
            // Change the document title
            document.title = finalTitle;
            
            // Update the display
            currentTitleElement.textContent = finalTitle;
            
            // Update status
            statusElement.className = 'status-indicator status-complete';
            statusElement.innerHTML = '✅ Title changed successfully!';
            
            // Hide countdown
            countdownDisplay.style.display = 'none';
            
            // Mark as ready for any wait conditions
            window.__titleChanged = true;
            
            console.log('Title changed from "<%= title %>" to "' + finalTitle + '"');
        }
        
        // Set initial countdown
        setTimeout(() => {
            changeTitle();
        }, delay);
    </script>
</body>
</html>